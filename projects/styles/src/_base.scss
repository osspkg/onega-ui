@use "sass:map";
@use "env";

.click {
  cursor: pointer;
}

.ta-c {
  text-align: center;
}

.ta-l {
  text-align: left;
}

.ta-r {
  text-align: right;
}

.wrap {
  word-wrap: break-word;
  word-break: keep-all;
  white-space: pre-wrap;
  overflow-x: auto;
}

.fs-small, .fs-small * {
  font-size: var(--ong-font-size-small) !important;
}

.fs-big, .fs-big * {
  font-size: var(--ong-font-size-big) !important;
}

.box {
  display: block;
  border-radius: var(--ong-radius-size);
  padding: var(--ong-padding-y-size) var(--ong-padding-x-size);
}

@each $name in env.$ong-color-names {
  .box-#{$name} {
    border: var(--ong-line-size) solid var(--ong-color-#{$name}-bg);
    background-color: var(--ong-color-#{$name}-bg);
    color: var(--ong-color-#{$name}-text);
  }
}

@each $name in env.$ong-color-names {
  .bg-#{$name} {
    background-color: var(--ong-color-#{$name}-bg);
    color: var(--ong-color-#{$name}-text);
  }
}


blockquote, .bq {
  border-radius: var(--ong-radius-size);
  padding: var(--ong-padding-y-size) var(--ong-padding-x-size);
}

@each $name in env.$ong-color-names {
  .bq-#{$name} {
    border: var(--ong-line-size) solid var(--ong-color-#{$name}-bg);
    border-color: var(--ong-color-#{$name}-bg);
    border-left: calc(var(--ong-line-size) * 10) solid var(--ong-color-#{$name}-bg);
  }
}

@each $name in env.$ong-color-names {
  .tc-#{$name} {
    color: var(--ong-color-#{$name}-bg);
  }
}

@for $i from 1 through 5 {
  .m-#{$i} {
    margin: calc(var(--ong-base-size) * $i);
  }
  .p-#{$i} {
    padding: calc(var(--ong-base-size) * $i);
  }
  @each $prefix, $value in env.$ong-position-prefix {
    .m#{$prefix}-#{$i} {
      margin-#{$value}: calc(var(--ong-base-size) * $i);
    }
    .p#{$prefix}-#{$i} {
      padding-#{$value}: calc(var(--ong-base-size) * $i);
    }
  }
}
