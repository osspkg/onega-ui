{"version":3,"file":"stylesheet-processor.js","sourceRoot":"","sources":["../../../src/lib/styles/stylesheet-processor.ts"],"names":[],"mappings":"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","sourcesContent":["import browserslist from 'browserslist';\nimport { NgPackageEntryConfig } from '../../ng-entrypoint.schema';\nimport { ComponentStylesheetBundler } from './component-stylesheets';\nimport { generateSearchDirectories, getTailwindConfig, loadPostcssConfiguration } from './postcss-configuration';\n\nexport enum CssUrl {\n  inline = 'inline',\n  none = 'none',\n}\n\nexport class StylesheetProcessor extends ComponentStylesheetBundler {\n  constructor(\n    protected readonly projectBasePath: string,\n    protected readonly basePath: string,\n    protected readonly cssUrl?: CssUrl,\n    protected readonly includePaths?: string[],\n    protected readonly sass?: NgPackageEntryConfig['lib']['sass'],\n    protected readonly cacheDirectory?: string | false,\n    protected readonly watch?: boolean,\n  ) {\n    // By default, browserslist defaults are too inclusive\n    // https://github.com/browserslist/browserslist/blob/83764ea81ffaa39111c204b02c371afa44a4ff07/index.js#L516-L522\n    // We change the default query to browsers that Angular support.\n    // https://angular.io/guide/browser-support\n    (browserslist.defaults as string[]) = [\n      'last 2 Chrome versions',\n      'last 1 Firefox version',\n      'last 2 Edge major versions',\n      'last 2 Safari major versions',\n      'last 2 iOS major versions',\n      'Firefox ESR',\n    ];\n\n    const browserslistData = browserslist(undefined, { path: basePath });\n    const searchDirs = generateSearchDirectories([projectBasePath]);\n    const postcssConfiguration = loadPostcssConfiguration(searchDirs);\n\n    super(\n      {\n        cacheDirectory: cacheDirectory,\n        postcssConfiguration: postcssConfiguration,\n        tailwindConfiguration: postcssConfiguration ? undefined : getTailwindConfig(searchDirs, projectBasePath),\n        sass: sass as any,\n        workspaceRoot: projectBasePath,\n        cssUrl: cssUrl,\n        target: transformSupportedBrowsersToTargets(browserslistData),\n        includePaths: includePaths,\n      },\n      'css',\n      watch,\n    );\n  }\n\n  destroy(): void {\n    void super.dispose();\n  }\n}\n\nfunction transformSupportedBrowsersToTargets(supportedBrowsers: string[]): string[] {\n  const transformed: string[] = [];\n\n  // https://esbuild.github.io/api/#target\n  const esBuildSupportedBrowsers = new Set(['safari', 'firefox', 'edge', 'chrome', 'ios']);\n\n  for (const browser of supportedBrowsers) {\n    let [browserName, version] = browser.split(' ');\n\n    // browserslist uses the name `ios_saf` for iOS Safari whereas esbuild uses `ios`\n    if (browserName === 'ios_saf') {\n      browserName = 'ios';\n    }\n\n    // browserslist uses ranges `15.2-15.3` versions but only the lowest is required\n    // to perform minimum supported feature checks. esbuild also expects a single version.\n    [version] = version.split('-');\n\n    if (esBuildSupportedBrowsers.has(browserName)) {\n      if (browserName === 'safari' && version === 'tp') {\n        // esbuild only supports numeric versions so `TP` is converted to a high number (999) since\n        // a Technology Preview (TP) of Safari is assumed to support all currently known features.\n        version = '999';\n      }\n\n      transformed.push(browserName + version);\n    }\n  }\n\n  return transformed.length ? transformed : undefined;\n}\n"]}